@model SisMed.WebUI.ViewModel.ConsultaViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Nova Consulta</h2>


@using (Html.BeginForm("Create", "Consulta", FormMethod.Post, new { id = "TheForm" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="control-label col-md-2">Cidade</label>
            <div class="col-md-10">
                @Html.DropDownList("IdCidade", null, "Selecione", htmlAttributes: new { @class = "form-control", @onchange = "document.getElementById('TheForm').submit();" })
            </div>
        </div>
        
        <div class="form-group">
            <label class="control-label col-md-2">Especialidade</label>
            <div class="col-md-10">
                @Html.DropDownList("IdEspecialidade", null, "Selecione", htmlAttributes: new { @class = "form-control", @onchange = "document.getElementById('TheForm').submit();" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Médico</label>
            <div class="col-md-10">
                @Html.DropDownList("IdMedico", null, "Selecione", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdMedico, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hidden">
            @Html.LabelFor(model => model.IdUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.IdUsuario, new { Value = ViewBag.IdUsuario })
                @Html.ValidationMessageFor(model => model.IdUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Tipo</label>
            <div class="col-md-10">
                @Html.DropDownList("idTipoConsulta", null, "Selecione", htmlAttributes: new { @class = "form-control", @onchange = "document.getElementById('TheForm').submit();" })
                @Html.ValidationMessageFor(model => model.IdTipoConsulta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ Html.EnableClientValidation(false); }
                @Html.EditorFor(model => model.Data, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
                @{ Html.EnableClientValidation(true); }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HorarioInicio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HorarioInicio, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HorarioInicio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observacao, new { htmlAttributes = new { @type= "textarea", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index", "Home")
</div>

@section Scripts {
    <script type="text/javascript">

        $(document).ready(function () {

            $('#HorarioInicio').timepicker({
                timeFormat: 'HH:mm',
                interval: @{ @ViewBag.TempoMedio },
                minTime: '@{ @ViewBag.HorarioInicial }',
                maxTime: '@{ @ViewBag.HorarioFinal }',
                dynamic: false,
                dropdown: true,
                scrollbar: true
            });

            $("#Data").keypress(function(event) {event.preventDefault();});
        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}


